{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","bg","variant","expand","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","as","name","Text","rating","numReviews","price","HomeScreen","dispatch","useDispatch","useSelector","useEffect","a","Axios","get","data","response","message","map","key","sm","md","lg","xl","ProductScreen","match","useState","setProduct","axios","params","fetchProduct","Image","alt","fluid","ListGroup","Item","description","countInStock","Button","disabled","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.52b51fab.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {productListReducer } from './reducers/productReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n})\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store","import {PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading:false, products: action.payload}\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'","import React from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {Navbar, Nav, Container} from 'react-bootstrap';\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand >ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                <LinkContainer to='/cart'>\r\n                <Nav.Link ><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to='/login'>\r\n                <Nav.Link><i className='fas fa-user'></i> Sign in</Nav.Link>\r\n                </LinkContainer>\r\n                </Nav>\r\n                </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n          <Container>\r\n              <Row>\r\n                  <Col className='text-center py-3'>\r\n                    Copyrights &copy; ProShop\r\n                  </Col>\r\n              </Row>\r\n          </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={value >=1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >=2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >=3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >=4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >=5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text ? text : ''}</span>\r\n        </div>\r\n    )\r\n}\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\nexport default Rating\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport { Card }from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to= {`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top'/>\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to = {`/product/${product._id}`}>\r\n                <Card.Title as='div'>\r\n                    <strong>{product.name}</strong>\r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as='div'>\r\n               <Rating value={product.rating} text ={`${product.numReviews} reviews`}/>\r\n            </Card.Text>\r\n    <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products } = productList\r\n\r\n    useEffect(()=> {\r\n       dispatch(listProducts())\r\n\r\n    },[dispatch])\r\n    return (\r\n        <div>\r\n            <h1>Latest Products</h1>\r\n            { loading ? (<h2>Loading...</h2>)\r\n             : error ? ( <h3>{error}</h3> )\r\n             : ( <Row>\r\n                {products.map(product => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product} />\r\n                    </Col>\r\n                ))}\r\n            </Row> ) }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import Axios from 'axios'\r\nimport {PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL} from '../constants/productConstants'\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch ({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await Axios.get('/api/products')\r\n\r\n        dispatch ({ type: PRODUCT_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch ({ type:PRODUCT_LIST_FAIL, payload: error.response \r\n            && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}","import React, {useState, useEffect}from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport axios from 'axios';\r\n\r\nconst ProductScreen = ({match}) => {\r\n    const [product, setProduct] = useState({})\r\n\r\n    useEffect(()=> {\r\n        const fetchProduct = async ()=>{\r\n            const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n            setProduct(data)\r\n        }\r\n        fetchProduct();\r\n    },[match])\r\n    \r\n    return (\r\n        <div>\r\n           <Link className ='btn btn-light my-3' to='/'>Go Back</Link>\r\n           <Row>\r\n               <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n               </Col>\r\n               <Col md={3}>\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                        <h3>\r\n                            {product.name}\r\n                        </h3>\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <Rating value={product.rating} text={`${product.numReviews} reviews`}></Rating>\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           Price: ${product.price}\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           Description: ${product.description}\r\n                       </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Col>\r\n               <Col md={3}>\r\n                   <Card>\r\n                       <ListGroup variant='flush'>\r\n                           <ListGroup.Item>\r\n                               <Row>\r\n                                    <Col>Price:</Col>\r\n                                    <Col><strong>${product.price}</strong></Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                           <ListGroup.Item>\r\n                               <Row>\r\n                                    <Col>Status:</Col>\r\n                                    <Col>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                           <ListGroup.Item>\r\n                               <Button className='btn-block' type='button' disabled={product.countInStock === 0}>\r\n                                   Add to Cart\r\n                               </Button>\r\n                           </ListGroup.Item>\r\n                       </ListGroup>\r\n                   </Card>\r\n               </Col>\r\n           </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Container} from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\n\nconst App = () => {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Header/>\n      <main className='py-3'>\n      <Container>\n        <Route path='/' exact component={HomeScreen} />\n        <Route path='/product/:id'  component={ProductScreen} />\n      </Container>\n      </main>\n     <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}